/**
 * Gkeep API
 * Gkeep API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GkeepApi);
  }
}(this, function(expect, GkeepApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GkeepApi.AlertListList();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertListList', function() {
    it('should create an instance of AlertListList', function() {
      // uncomment below and update the code to test AlertListList
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be.a(GkeepApi.AlertListList);
    });

    it('should have the property fuelLevel (base name: "fuel_level")', function() {
      // uncomment below and update the code to test the property fuelLevel
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property fuelLevelOnRaiseStart (base name: "fuel_level_on_raise_start")', function() {
      // uncomment below and update the code to test the property fuelLevelOnRaiseStart
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property actionStatus (base name: "action_status")', function() {
      // uncomment below and update the code to test the property actionStatus
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property navSystemObjectUid (base name: "nav_system_object_uid")', function() {
      // uncomment below and update the code to test the property navSystemObjectUid
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property isClosed (base name: "is_closed")', function() {
      // uncomment below and update the code to test the property isClosed
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property vehicle (base name: "vehicle")', function() {
      // uncomment below and update the code to test the property vehicle
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property driver (base name: "driver")', function() {
      // uncomment below and update the code to test the property driver
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property level (base name: "level")', function() {
      // uncomment below and update the code to test the property level
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

    it('should have the property isMaintenanceEnabled (base name: "is_maintenance_enabled")', function() {
      // uncomment below and update the code to test the property isMaintenanceEnabled
      //var instane = new GkeepApi.AlertListList();
      //expect(instance).to.be();
    });

  });

}));

/**
 * Gkeep API
 * Gkeep API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GkeepApi);
  }
}(this, function(expect, GkeepApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GkeepApi.UpdateVehicleVehicle();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateVehicleVehicle', function() {
    it('should create an instance of UpdateVehicleVehicle', function() {
      // uncomment below and update the code to test UpdateVehicleVehicle
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be.a(GkeepApi.UpdateVehicleVehicle);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property navSystemObjectUid (base name: "nav_system_object_uid")', function() {
      // uncomment below and update the code to test the property navSystemObjectUid
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property releaseYear (base name: "release_year")', function() {
      // uncomment below and update the code to test the property releaseYear
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property registration (base name: "registration")', function() {
      // uncomment below and update the code to test the property registration
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property initialConsumption (base name: "initial_consumption")', function() {
      // uncomment below and update the code to test the property initialConsumption
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property navSystem (base name: "nav_system")', function() {
      // uncomment below and update the code to test the property navSystem
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property tanks (base name: "tanks")', function() {
      // uncomment below and update the code to test the property tanks
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property tankPosition (base name: "tank_position")', function() {
      // uncomment below and update the code to test the property tankPosition
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

    it('should have the property technical (base name: "technical")', function() {
      // uncomment below and update the code to test the property technical
      //var instane = new GkeepApi.UpdateVehicleVehicle();
      //expect(instance).to.be();
    });

  });

}));

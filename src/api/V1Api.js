/**
 * Gkeep API
 * Gkeep API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CountryList from '../model/CountryList';
import TankTypeList from '../model/TankTypeList';
import UserGroupList from '../model/UserGroupList';
import VehicleBrandList from '../model/VehicleBrandList';
import VehicleFuelTypeList from '../model/VehicleFuelTypeList';
import VehicleModelList from '../model/VehicleModelList';
import VehicleNationalTypeList from '../model/VehicleNationalTypeList';
import VehiclePropertyList from '../model/VehiclePropertyList';
import VehicleTypeList from '../model/VehicleTypeList';
import VehicleVersionList from '../model/VehicleVersionList';

/**
* V1 service.
* @module api/V1Api
* @version 1.0.0
*/
export default class V1Api {

    /**
    * Constructs a new V1Api. 
    * @alias module:api/V1Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getCountriesList operation.
     * @callback module:api/V1Api~getCountriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountryList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get countries
     * @param {module:api/V1Api~getCountriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountryList}
     */
    getCountriesList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CountryList;

      return this.apiClient.callApi(
        '/api/v1/countries/by', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getTankTypeList operation.
     * @callback module:api/V1Api~getTankTypeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TankTypeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get tank types
     * @param {module:api/V1Api~getTankTypeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TankTypeList}
     */
    getTankTypeList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TankTypeList;

      return this.apiClient.callApi(
        '/api/v1/tank/types/by', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getUserGroupList operation.
     * @callback module:api/V1Api~getUserGroupListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserGroupList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get user allowed groups
     * @param {module:api/V1Api~getUserGroupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserGroupList}
     */
    getUserGroupList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserGroupList;

      return this.apiClient.callApi(
        '/api/v1/user/allowed/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleBrandList operation.
     * @callback module:api/V1Api~getVehicleBrandListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleBrandList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle brands
     * @param {module:api/V1Api~getVehicleBrandListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleBrandList}
     */
    getVehicleBrandList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleBrandList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/brands', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleFuelTypesList operation.
     * @callback module:api/V1Api~getVehicleFuelTypesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleFuelTypeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle fuel-types
     * @param {module:api/V1Api~getVehicleFuelTypesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleFuelTypeList}
     */
    getVehicleFuelTypesList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleFuelTypeList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/fuel-types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleModelList operation.
     * @callback module:api/V1Api~getVehicleModelListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleModelList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle models
     * @param {Object} opts Optional parameters
     * @param {module:api/V1Api~getVehicleModelListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleModelList}
     */
    getVehicleModelList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleModelList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/models', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleNationalTypeList operation.
     * @callback module:api/V1Api~getVehicleNationalTypeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleNationalTypeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle national-types
     * @param {module:api/V1Api~getVehicleNationalTypeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleNationalTypeList}
     */
    getVehicleNationalTypeList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleNationalTypeList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/national-types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehiclePropertiesList operation.
     * @callback module:api/V1Api~getVehiclePropertiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehiclePropertyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle properties
     * @param {module:api/V1Api~getVehiclePropertiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehiclePropertyList}
     */
    getVehiclePropertiesList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehiclePropertyList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleTypeList operation.
     * @callback module:api/V1Api~getVehicleTypeListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleTypeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle types
     * @param {module:api/V1Api~getVehicleTypeListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleTypeList}
     */
    getVehicleTypeList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleTypeList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getVehicleVersionList operation.
     * @callback module:api/V1Api~getVehicleVersionListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VehicleVersionList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle versions
     * @param {Object} opts Optional parameters
     * @param {module:api/V1Api~getVehicleVersionListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VehicleVersionList}
     */
    getVehicleVersionList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VehicleVersionList;

      return this.apiClient.callApi(
        '/api/v1/vehicle/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
